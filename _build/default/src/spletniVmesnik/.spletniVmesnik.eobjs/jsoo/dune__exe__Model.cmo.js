// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.4.0

//# unitInfo: Provides: Dune__exe__Model
//# unitInfo: Requires: Definicije__Avtomat, Definicije__Trak, Definicije__ZagnaniAvtomat, Dune__exe__Vektor, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Definicije_ZagnaniAvtomat = global_data.Definicije__ZagnaniAvtomat,
    Stdlib_List = global_data.Stdlib__List,
    Definicije_Trak = global_data.Definicije__Trak,
    Definicije_Avtomat = global_data.Definicije__Avtomat,
    Dune_exe_Vektor = global_data.Dune__exe__Vektor;
   function init(sirina, visina, avtomat){
    var
     _h_ = caml_call1(Definicije_Avtomat[7], avtomat),
     _i_ = caml_call1(Stdlib_List[1], _h_),
     _j_ = caml_call3(Dune_exe_Vektor[8], _i_, sirina, visina),
     _k_ = caml_call1(Definicije_Avtomat[7], avtomat),
     polozaji = caml_call1(caml_call1(Stdlib_List[55], _k_), _j_);
    return [0,
            caml_call2
             (Definicije_ZagnaniAvtomat[1], avtomat, Definicije_Trak[1]),
            polozaji,
            0,
            sirina,
            visina];
   }
   function polozaj_stanja(model, q){
    return caml_call2(Stdlib_List[46], q, model[2]);
   }
   function update(model, param){
    if(typeof param === "number")
     switch(param){
       case 0:
        var match = caml_call1(Definicije_ZagnaniAvtomat[5], model[1]);
        if(! match) return model;
        var avtomat = match[1];
        return [0, avtomat, model[2], model[3], model[4], model[5]];
       case 1:
        return [0, model[1], model[2], 0, model[4], model[5]];
       default: return [0, model[1], model[2], 1, model[4], model[5]];
     }
    switch(param[0]){
      case 0:
       var q = param[1];
       return [0, model[1], model[2], [0, q], model[4], model[5]];
      case 1:
       var position = param[1], match$0 = model[3];
       if(typeof match$0 === "number") return model;
       var
        q$0 = match$0[1],
        _a_ = model[2],
        _b_ =
          function(param){
           var
            position$0 = param[2],
            q = param[1],
            position$1 = runtime.caml_equal(q$0, q) ? position : position$0;
           return [0, q, position$1];
          },
        polozaji = caml_call2(Stdlib_List[19], _b_, _a_);
       return [0, model[1], polozaji, model[3], model[4], model[5]];
      default:
       var
        vneseni_niz = param[1],
        _c_ = model[5],
        _d_ = model[4],
        _e_ = model[2],
        _f_ = caml_call1(Definicije_Trak[5], vneseni_niz),
        _g_ = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]);
       return [0,
               caml_call2(Definicije_ZagnaniAvtomat[1], _g_, _f_),
               _e_,
               0,
               _d_,
               _c_];
    }
   }
   var Dune_exe_Model = [0, init, polozaj_stanja, update];
   runtime.caml_register_global(5, Dune_exe_Model, "Dune__exe__Model");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiIuc3BsZXRuaVZtZXNuaWsuZW9ianMvanNvby9kdW5lX19leGVfX01vZGVsLmNtby5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJpbml0Iiwic2lyaW5hIiwidmlzaW5hIiwiYXZ0b21hdCIsInBvbG96YWppIiwicG9sb3phal9zdGFuamEiLCJtb2RlbCIsInEiLCJ1cGRhdGUiLCJwb3NpdGlvbiIsInEkMCIsInBvc2l0aW9uJDAiLCJwb3NpdGlvbiQxIiwidm5lc2VuaV9uaXoiXSwic291cmNlcyI6WyIvd29ya3NwYWNlX3Jvb3Qvc3JjL3NwbGV0bmlWbWVzbmlrL21vZGVsLm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7O1lBWUlBLEtBQUtDLFFBQU9DLFFBQU9DO0lBQ3JCO0tBRWlCLE1BQUEsa0NBSElBO0tBR2pCLE1BQUE7S0FERixNQUFBLG9DQUZLRixRQUFPQztLQUtJLE1BQUEsa0NBTEdDO0tBQ2pCQyxXQUNGLFdBR0c7SUFFTDtZQUNZOzRDQVJTRDtZQUNqQkM7O1lBREdIO1lBQU9DO0dBYWI7WUFVQ0csZUFBZUMsT0FBTUM7SUFBSSxtQ0FBSkEsR0FBTkQ7R0FBcUM7WUFFcERFLE9BQU9GO0k7OztRQUVDLFlBQUEseUNBRkRBO29CQUdLLE9BSExBO1lBSUVIO1FBQVksV0FBWkEsU0FKRkcsVUFBQUEsVUFBQUEsVUFBQUE7O1FBaUJpQixXQWpCakJBLFVBQUFBLGFBQUFBLFVBQUFBO2dCQWtCVSxXQWxCVkEsVUFBQUEsYUFBQUEsVUFBQUE7Ozs7V0FLYUM7T0FBSyxXQUxsQkQsVUFBQUEsY0FLYUMsSUFMYkQsVUFBQUE7O09BTXNCLElBQVpHLHFCQUFZLFVBTnRCSDt1Q0FnQkUsT0FoQkZBO09BU0Q7UUFEaUJJO1FBQ2pCLE1BVENKOzs7V0FXRztZQUFVSztZQUFKSjtZQUxDSyxhQU1HLG1CQUpHRixLQUdQSCxLQUxDRSxXQUtHRTtXQUNSLFdBRElKLEdBTENLO1VBTXdDO1FBSC9DUixXQUNGO09BS0YsV0FmQ0UsVUFTR0YsVUFUSEUsVUFBQUEsVUFBQUE7O09BeUJDO1FBTkNPO2NBbkJGUDtjQUFBQTtjQUFBQTtRQXlCQyxNQUFBLCtCQU5DTztRQUtELE1BQUEseUNBeEJEUDtPQW9CTDtlQUdJOzs7Ozs7OzRCQWhETk4sTUF1QkFLLGdCQUVBRzs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyJvcGVuIERlZmluaWNpamVcblxudHlwZSBuYWNpbiA9IFByaXZ6ZXROYWNpbiB8IFZuYXNhbmplTml6YSB8IFByZW1pa2FuamVWb3psaXNjYSBvZiBTdGFuamUudFxuXG50eXBlIG1vZGVsID0ge1xuICBhdnRvbWF0IDogWmFnbmFuaUF2dG9tYXQudDtcbiAgcG9sb3phamkgOiAoU3RhbmplLnQgKiBWZWt0b3IudCkgbGlzdDtcbiAgbmFjaW4gOiBuYWNpbjtcbiAgc2lyaW5hIDogZmxvYXQ7XG4gIHZpc2luYSA6IGZsb2F0O1xufVxuXG5sZXQgaW5pdCBzaXJpbmEgdmlzaW5hIGF2dG9tYXQgPVxuICBsZXQgcG9sb3phamkgPVxuICAgIFZla3Rvci5rb3JlbmlfZW5vdGVcbiAgICAgIChMaXN0Lmxlbmd0aCAoQXZ0b21hdC5zZXpuYW1fc3RhbmogYXZ0b21hdCkpXG4gICAgICBzaXJpbmEgdmlzaW5hXG4gICAgfD4gTGlzdC5jb21iaW5lIChBdnRvbWF0LnNlem5hbV9zdGFuaiBhdnRvbWF0KVxuICBpblxuICB7XG4gICAgYXZ0b21hdCA9IFphZ25hbmlBdnRvbWF0LnBvemVuaSBhdnRvbWF0IFRyYWsucHJhemVuO1xuICAgIHBvbG96YWppO1xuICAgIG5hY2luID0gUHJpdnpldE5hY2luO1xuICAgIHNpcmluYTtcbiAgICB2aXNpbmE7XG4gIH1cblxudHlwZSBtc2cgPVxuICB8IFByZWJlcmlOYXNsZWRuamlabmFrXG4gIHwgWmFjbmlQcmVtaWtWb3psaXNjYSBvZiBTdGFuamUudFxuICB8IFByZW1ha25pVm96bGlzY2Ugb2YgVmVrdG9yLnRcbiAgfCBLb25jYWpQcmVtaWtWb3psaXNjYVxuICB8IFphY25pVm5vc05pemFcbiAgfCBWbmVzaU5peiBvZiBzdHJpbmdcblxubGV0IHBvbG96YWpfc3RhbmphIG1vZGVsIHEgPSBMaXN0LmFzc29jIHEgbW9kZWwucG9sb3phamlcblxubGV0IHVwZGF0ZSBtb2RlbCA9IGZ1bmN0aW9uXG4gIHwgUHJlYmVyaU5hc2xlZG5qaVpuYWsgLT4gKFxuICAgICAgbWF0Y2ggWmFnbmFuaUF2dG9tYXQua29yYWtfbmFwcmVqIG1vZGVsLmF2dG9tYXQgd2l0aFxuICAgICAgfCBOb25lIC0+IG1vZGVsXG4gICAgICB8IFNvbWUgYXZ0b21hdCcgLT4geyBtb2RlbCB3aXRoIGF2dG9tYXQgPSBhdnRvbWF0JyB9KVxuICB8IFphY25pUHJlbWlrVm96bGlzY2EgcSAtPiB7IG1vZGVsIHdpdGggbmFjaW4gPSBQcmVtaWthbmplVm96bGlzY2EgcSB9XG4gIHwgUHJlbWFrbmlWb3psaXNjZSBwb3NpdGlvbiAtPiAoXG4gICAgICBtYXRjaCBtb2RlbC5uYWNpbiB3aXRoXG4gICAgICB8IFByZW1pa2FuamVWb3psaXNjYSBxIC0+XG4gICAgICAgICAgbGV0IHBvbG96YWppID1cbiAgICAgICAgICAgIExpc3QubWFwXG4gICAgICAgICAgICAgIChmdW4gKHEnLCBwb3NpdGlvbicpIC0+XG4gICAgICAgICAgICAgICAgKHEnLCBpZiBxID0gcScgdGhlbiBwb3NpdGlvbiBlbHNlIHBvc2l0aW9uJykpXG4gICAgICAgICAgICAgIG1vZGVsLnBvbG96YWppXG4gICAgICAgICAgaW5cbiAgICAgICAgICB7IG1vZGVsIHdpdGggcG9sb3phamkgfVxuICAgICAgfCBfIC0+IG1vZGVsKVxuICB8IEtvbmNhalByZW1pa1Zvemxpc2NhIC0+IHsgbW9kZWwgd2l0aCBuYWNpbiA9IFByaXZ6ZXROYWNpbiB9XG4gIHwgWmFjbmlWbm9zTml6YSAtPiB7IG1vZGVsIHdpdGggbmFjaW4gPSBWbmFzYW5qZU5pemEgfVxuICB8IFZuZXNpTml6IHZuZXNlbmlfbml6IC0+XG4gICAgICB7XG4gICAgICAgIG1vZGVsIHdpdGhcbiAgICAgICAgYXZ0b21hdCA9XG4gICAgICAgICAgWmFnbmFuaUF2dG9tYXQucG96ZW5pXG4gICAgICAgICAgICAoWmFnbmFuaUF2dG9tYXQuYXZ0b21hdCBtb2RlbC5hdnRvbWF0KVxuICAgICAgICAgICAgKFRyYWsuaXpfbml6YSB2bmVzZW5pX25peik7XG4gICAgICAgIG5hY2luID0gUHJpdnpldE5hY2luO1xuICAgICAgfVxuIl19
